-- WARNING: Use at your own risk!

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/deeeity/mercury-lib/master/src.lua"))()

local gui = Library:create{
    Theme = Library.Themes.Serika,
    Name = "AWP_HUB Survival"
}

local player = game.Players.LocalPlayer
local rs = game:GetService("RunService")

local mainTab = gui:tab{
    Icon = "rbxassetid://6034996695",
    Name = "Main"
}

-- Toggles' states
local noFallEnabled = false
local godModeEnabled = false
local blackHoleEnabled = false

local blackHoleLoop, godModeLoop, noFallLoop
local blackHole = Instance.new("Part")
blackHole.Name = "BlackHole"
blackHole.Size = Vector3.new(10,10,10)
blackHole.Shape = Enum.PartType.Ball
blackHole.Material = Enum.Material.Neon
blackHole.BrickColor = BrickColor.new("Really black")
blackHole.Transparency = 0.4
blackHole.Anchored = false
blackHole.CanCollide = false
blackHole.Position = Vector3.new(0,9999,0)
blackHole.Parent = workspace

local bodyForce = Instance.new("BodyForce", blackHole)
bodyForce.Force = Vector3.new(0, 0, 0)

-- Functions
local function setBlackHole(state)
    blackHoleEnabled = state
    if state then
        blackHole.Parent = workspace
        blackHole.Position = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position + Vector3.new(0,5,0) or Vector3.new(0,5,0)

        blackHoleLoop = rs.Heartbeat:Connect(function()
            if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
            blackHole.Position = player.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0)

            for _, obj in pairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") and obj ~= blackHole and (obj.Position - blackHole.Position).Magnitude < 50 then
                    local dir = (blackHole.Position - obj.Position).Unit
                    local dist = (blackHole.Position - obj.Position).Magnitude
                    local force = math.clamp(5000 / (dist * dist), 0, 5000)
                    local bf = Instance.new("BodyForce", obj)
                    bf.Force = dir * force
                    game.Debris:AddItem(bf, 0.3)
                end
            end
        end)
        gui:set_status("Black Hole Enabled")
    else
        if blackHoleLoop then blackHoleLoop:Disconnect() end
        blackHole.Position = Vector3.new(0,9999,0)
        gui:set_status("Black Hole Disabled")
    end
end

local function setGodMode(state)
    godModeEnabled = state
    if state then
        local function loop()
            if not player.Character or not player.Character:FindFirstChildOfClass("Humanoid") then return end
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            humanoid.Health = humanoid.MaxHealth
        end
        godModeLoop = rs.Heartbeat:Connect(loop)
        gui:set_status("God Mode Enabled")
    else
        if godModeLoop then godModeLoop:Disconnect() end
        gui:set_status("God Mode Disabled")
    end
end

local function setNoFallDamage(state)
    noFallEnabled = state
    if state then
        noFallLoop = rs.Heartbeat:Connect(function()
            local char = player.Character
            if not char then return end
            local hrp = char:FindFirstChild("HumanoidRootPart")
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            if hrp and humanoid then
                if hrp.Velocity.Y < -100 then -- falling fast
                    humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                end
            end
        end)
        gui:set_status("No Fall Damage Enabled")
    else
        if noFallLoop then noFallLoop:Disconnect() end
        gui:set_status("No Fall Damage Disabled")
    end
end

-- Button: Inf Yield
mainTab:button({
    Name = "Load Inf Yield",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
        gui:set_status("Inf Yield Loaded")
    end
})

-- Toggle: No Fall Damage
mainTab:toggle({
    Name = "No Fall Damage",
    StartingState = false,
    Callback = function(state)
        setNoFallDamage(state)
    end
})

-- Toggle: God Mode
mainTab:toggle({
    Name = "God Mode",
    StartingState = false,
    Callback = function(state)
        setGodMode(state)
    end
})

-- Toggle: Black Hole
mainTab:toggle({
    Name = "Black Hole",
    StartingState = false,
    Callback = function(state)
        setBlackHole(state)
    end
})

-- Reapply toggles on respawn
player.CharacterAdded:Connect(function()
    wait(1)
    if noFallEnabled then setNoFallDamage(true) end
    if godModeEnabled then setGodMode(true) end
    if blackHoleEnabled then setBlackHole(true) end
end)

gui:set_status("AWP_HUB Loaded")
